

// <auto-generated>
//      This code was generated using T4 text template
//      Generated at 03/24/2017 12:44:24
//
//      Changes to this file may cause incorrect behaviour and will be lost 
//      if the code is regenerated.
// </auto-generated>

using System;
using JetBrains.Annotations;

namespace Polygon.Diagnostics
{
    partial class LogMessage
    {
		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] IPrintable value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<IPrintable>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] string value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<string>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] bool value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<bool>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] bool? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<bool?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] int value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<int>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] int? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<int?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] uint value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<uint>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] uint? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<uint?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] long value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<long>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] long? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<long?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] ulong value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<ulong>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] ulong? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<ulong?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] short value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<short>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] short? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<short?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] ushort value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<ushort>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] ushort? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<ushort?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] byte value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<byte>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] byte? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<byte?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] sbyte value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<sbyte>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] sbyte? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<sbyte?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] float value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<float>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] float? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<float?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] double value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<double>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] double? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<double?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] decimal value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<decimal>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] decimal? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<decimal?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] DateTime value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<DateTime>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] DateTime? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<DateTime?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] TimeSpan value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<TimeSpan>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] TimeSpan? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<TimeSpan?>.Create(name, value, format, suffix);
				/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] Guid value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<Guid>.Create(name, value, format, suffix);

		/// <summary>
        ///     Создать объект для записи в лог поля с указанными названием и значением, с автоматическим форматированием значения
        /// </summary>
        [NotNull]
        public static ILogField Field(
            [NotNull] string name, 
            [CanBeNull] Guid? value,
            [CanBeNull] string format = null,
            [CanBeNull] string suffix = null)
            => LogFieldImpl<Guid?>.Create(name, value, format, suffix);
			}
}
