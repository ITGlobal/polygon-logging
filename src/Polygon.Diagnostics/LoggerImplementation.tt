<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="defs.t4" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
// <auto-generated>
//      This code was generated using T4 text template
//      Generated at <#= DateTime.Now #>
//
//      Changes to this file may cause incorrect behaviour and will be lost 
//      if the code is regenerated.
// </auto-generated>

using System;
using System.Runtime.CompilerServices;
using JetBrains.Annotations;

namespace Polygon.Diagnostics
{
    /// <summary>
    ///     Логгер
    /// </summary>
    internal sealed class LoggerImplementation : ILog
    {
        private readonly string name;

        public LoggerImplementation(string name)
        {
            this.name = name;
        }

    <# foreach(var level in T4LogLevel.Levels) { #>
    #region <#= level #>

        /// <summary>
        ///     Разрешен ли уровень логирования <see cref="LogLevel.<#= level #>"/>.
        /// </summary>
        public bool Is<#= level #>Enabled => LogManager.IsLoggingEnabled(name, LogLevel.<#= level #>);

        /// <summary>
        ///     Записать в лог сообщение с уровнен <see cref="LogLevel.<#= level #>"/>.
        /// </summary>
		[NotNull] 
		public I<#= level #>LogPrinter <#= level #>([CallerLineNumber] int line = 0, [CallerMemberName] string caller = null)
		{
			if(!Is<#= level #>Enabled)
			{
				return Log<#= level #>DisabledLogPrinter.Instance;
			}

			return Log<#= level #>LogPrinter.Acquire(name, caller, line);
		}

        #endregion

    <# } #>
	}
}
